What happens when you initialize a repository? Why do you need to do it?

- ".git" directory is created inside the directory where repository gets initialised. This is necessary to track versions of files using Git.
Repository initialisation does not add a commit.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

- The staging area identifies which files to be included in the next commit. The staging area exists in memory whereas the repository (".git" directory) and the working directory (which contains all files and directories including the repository) have been written in the disk.

How can you use the staging area to make sure you have one commit per logical
change?

- Add all files containing the logical changes to the staging area.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

- When I try different methods to get the same output. Branches could help avoid confusion between different versions.

How do the diagrams help you visualize the branch structure?

- Diagrams make it easier to see how different commits are related to one another.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
