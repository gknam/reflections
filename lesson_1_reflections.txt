How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    diff identified discrepancies quickly and systematically. It was not error 
    prone, or at least more accurate than human eyes.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    This can help avoid introducing more bugs while fixing a bug.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pro: I can choose when to create a commit.
    con: There is no fail-safe (e.g. if the computer shuts down).

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    This is because documents are likely interrelated in some cases, for which
    all files should be considered together. Git would be suitable for this.
    
    This won't be necessary where files can be considered individually.

How can you use the commands git log and git diff to view the history of files?

    git log provides commit IDs, dates and notes.

    git diff shows difference between two commit versions, specifying line
    numbers.

How might using version control make you more confident to make changes that
could break something?

    git can recover previous versions in case a bug is introduced. This provides
    sense of 'safety'.

Now that you have your workspace set up, what do you want to try using Git for?

    I wish to check out a commit, make a change and see if the star appears in 
    the prompt.
